:::Project outline:::
 
==>Input: Language
 
==>Output: Name
 
==>Functions:
    >Main()
        >GetLang()
            -Reads all the file names in the language folder
            -Displays them for a user to chose one 
            -Returns an array of all the names in that language
        >PatternSort()
            >FindFristAndLastLetters(array singleLetters)
                -Talies the occurences of leters that occure as frist leters and last leters 
                -Stores the data in a 2d array 
                    .array singleLetters[26][3] = {{char letter,int fristOccurences,int LastOccurences}}
                -returns the array
            >FindPattern(n,array nLetters,&arraysize) where n = 2-3
                -Concurrently runs through each word n leters at a time
                -Talies the popularity and position of the letter combinations
                -Stores the data in a 2d array
                    .array nLetters[][4] = {{char letter,int fristOccurences,int middleOccurences, int LastOccurences}}
        >MakeName()
            >
 
==>Data Flow:
    (Function A) | [passed value] -> (Function B) | [return value]
   
    User [language choice] -> Main() [name]
    Main() [language choice] -> GetLang() [language file]
    Main() [language file] -> PatternSort() [pattern set]
    Main() [pattern set] -> MakeName() [name]
 
==>Properties of a name:
    Prefix   Mid   Suffix
    [A] B [C D] E [F G H]
 
==>Properties of a Pattern:
    >length (1-3 chars)
    >location (prefix, mid, suffix)
    >popularity
    >length of origin name (1-10 chars)
 
==>Data Structure:
    >Type -> Hash Set
    >Type contained -> List
    >Type of contents -> Int & String
    >Location: 0 - prefix, 1 - mid, 2 - suffix
 
    Popularity | Pattern | Length of origin word | Location
       1          "ale"     10        2
 
==>Order of Operations:
    >Determine size of new name
    >Determine a combination of pattern sizes
    >Determine order of patterns
    >Determine pattern location priority
    >Determine pattern origin length priority
    >Determine pattern popularity priority
    >Choose sudo random patterns and add together
    >return name
    
==>Sudo Code: Functions:
        >Main()
                -calls all three functions in succession
        >GetLang()
                -prompts users with list made of files in folder
                        -language a
                        -language ...
                -uses files.dir.files() to list files in directory
                -imports language file of string given
        >
